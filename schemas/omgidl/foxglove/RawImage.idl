// Generated by https://github.com/foxglove/foxglove-sdk

#include "foxglove/Time.idl"

module foxglove {

// A raw image
struct RawImage {
  // Timestamp of image
  Time timestamp;

  // Frame of reference for the image. The origin of the frame is the optical center of the camera. +x points to the right in the image, +y points down, and +z points into the plane of the image.
  string frame_id;

  // Image width in pixels
  uint32 width;

  // Image heigh in pixels
  uint32 height;

  // Encoding of the raw image data. See the `data` field description for supported values.
  string encoding;

  // Byte length of a single row. This is usually some multiple of `width` depending on the encoding, but can be greater to incorporate padding.
  uint32 step;

  // Raw image data.
  // 
  // The requirements for each `encoding` value are:
  // - `yuv422`,  `uyvy`:
  //   - 8-bit [Y'UV](https://en.wikipedia.org/wiki/Y%E2%80%B2UV).
  //   - U and V values are shared between horizontal pairs of pixels. Each pair of output pixels is encoded as [U, Y1, V, Y2].
  //   - `step` must be greater than or equal to `width` * 2.
  // - `yuv422_yuy2`,  `yuyv`:
  //   - 8-Bit [Y'UV](https://en.wikipedia.org/wiki/Y%E2%80%B2UV).
  //   - U and V values are shared between horizontal pairs of pixels. Each pair of output pixels is encoded as [Y1, U, Y2, V].
  //   - `step` must be greater than or equal to `width` * 2.
  // - `rgb8`:
  //   - 8-bit RGB.
  //   - Each output pixel is encoded as [R, G, B].
  //   - `step` must be greater than or equal to `width` * 3.
  // - `rgba8`:
  //   - 8-bit RGB + Alpha.
  //   - Each output pixel is encoded as [R, G, B, Alpha].
  //   - `step` must be greater than or equal to `width` * 4.
  // - `bgr8`:
  //   - RGB, one byte per component.
  //   - Each output pixel is encoded as [B, G, R].
  //   - `step` must be greater than or equal to `width` * 3.
  // - `bgra8`, `8UC3`:
  //   - RGB + Alpha, one byte per component.
  //   - Each output pixel is encoded as [B, G, R, Alpha].
  //   - `step` must be greater than or equal to `width` * 4.
  // - `32FC1`:
  //   - 32-bit little-endian IEEE754 float brightness values, from 0.0 (black) to 1.0 (white).
  //   - `step` must be greater than or equal to `width` * 4.
  // - `bayer_rggb8`, `bayer_bggr8`, `bayer_rggb8`, `bayer_gbrg8`, `bayer_grgb8`:
  //   - 8-bit Bayer filter pattern RGB values.
  //   - The order of the four letters after `bayer_` determine the layout, so for `bayer_wxyz8` the pattern is:
  //   ```plaintext
  //   w | x
  //   - | -
  //   y | z
  //   ```
  //   - `step` must be greater than or equal to `width`.
  // - `mono8`, `8UC1`:
  //   - 8-bit brightness values from 0 (black) to 255 (white).
  //   - `step` must be greater than or equal to `width`.
  // - `mono16`, `16UC1`:
  //   - 16-bit abstract per-pixel values. Rendering of these values is controlled in [Image panel color mode settings](https://docs.foxglove.dev/docs/visualization/panels/image#general).
  //   - `step` must be greater than or equal to `width` * 2.
  sequence<uint8> data;
};

};
